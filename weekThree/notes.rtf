{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 WeekThree\
\
Perceptron\
! Dataset - 100% \
	\'93AND\'94 gate dataset:\
		array = [1,1],[1,-1],[-1,1],[-1,-1]\
	\'93AND\'94 gate output:\
		array = [1],[-1],[-1],[-1]\
\
Retrain the perceptron when performing a new function:\
AND/ OR/ XOR\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 ! Dataset - 100%\
	\'93OR\'94 gate dataset:\
		array = [1,1],[1,-1],[-1,1],[-1,-1]\
	\'93OR\'94 gate output:\
		array = [1],[1],[1],[-1]\
\
! Dataset - 50%\
	\'93XOR\'94 gate dataset:\
		array = [1,1],[1,-1],[-1,1],[-1,-1]\
	\'93XOR\'94 gate output:\
		array = [1],[1],[1],[-1]\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
Initial weight assigning:\
random\
Or more\
\
Pseudocode:\
	init(numInputDims, numberOutputDims)\
		# assign random weight\
		weight = np.random.random()\
\
	predict(inputData)\
		return arrayofPredictions\
\
	train(tier, input, output) \
		for iter in range(0, n)\
			predict()}